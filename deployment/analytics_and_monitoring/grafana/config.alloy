otelcol.receiver.otlp "otlp_receiver" {
  http {
    endpoint = "0.0.0.0:4318"
    auth = otelcol.auth.basic.creds.handler
  }

  output {
    metrics = [otelcol.processor.batch.batcher.input]
    logs    = [otelcol.processor.batch.batcher.input]
    traces  = [otelcol.processor.batch.batcher.input]
  }
}

otelcol.auth.basic "creds" {
    username = "otlp"
    password = local.file.otlppassword.content
}

local.file "otlppassword" {
  filename = "/etc/alloy/otlppassword.txt"
  is_secret = true
}

otelcol.processor.batch "batcher" {
  output {
    metrics = [otelcol.exporter.prometheus.mimir.input]
    logs    = [otelcol.exporter.loki.loki.input]
    traces  = [otelcol.exporter.otlphttp.tempo.input]
  }
}


//tempo
otelcol.exporter.otlphttp "tempo" {
  client {
    endpoint = "http://tempo:4318"
    tls {
		insecure = true
	}
  }
}

//loki
otelcol.exporter.loki "loki" {
  forward_to = [loki.write.loki.receiver]
}

loki.write "loki" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

//mimir
otelcol.exporter.prometheus "mimir" {
  forward_to = [prometheus.remote_write.mimir.receiver]
}

prometheus.remote_write "mimir" {
  endpoint {
    url = "http://mimir:9009/api/v1/push"
  }
}