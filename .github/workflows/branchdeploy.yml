name: Deployment Branch on Comment

on:
  issue_comment:
    types: [ created ]

permissions:
  contents: read
  packages: write
  pull-requests: write

concurrency: branchdeploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: branchdeploy
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '!deploy'}}

    steps:
      - name: Create initial comment
        id: init_comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: "Working on the branchdeploy... "
      - name: fetch pullrequest
        id: pr
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ github.event.issue.pull_request.url }}
          method: GET
      - uses: actions/checkout@v5
        with:
          repository: ${{ fromJson(steps.pr.outputs.response).head.repo.full_name }}
          ref: ${{ fromJson(steps.pr.outputs.response).head.ref }}
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
      - name: Build Docker images with gradle
        run: ./gradlew imageBuild
      - name: Login to Docker Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag And Push Docker Images
        id: push_images
        run: ./deploy_branch.sh ${{ fromJson(steps.pr.outputs.response).head.ref }}
      - name: triggering deploy publisher
        id: triggerbranch_search
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://branchdeployer.boudicca.events/deploy'
          method: 'POST'
          username: ${{ secrets.BRANCHDEPLOY_USER }}
          password: ${{ secrets.BRANCHDEPLOY_PASSWORD }}
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"branchName": "${{ fromJson(steps.pr.outputs.response).head.ref }}", "gitRepository": "${{ fromJson(steps.pr.outputs.response).head.repo.clone_url }}", "deploymentName": "search", "dockerImageName": "${{ steps.push_images.outputs.imageNameSearch }}"}'
          timeout: 600000
      - name: triggering deploy
        id: triggerbranch_publisher
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://branchdeployer.boudicca.events/deploy'
          method: 'POST'
          username: ${{ secrets.BRANCHDEPLOY_USER }}
          password: ${{ secrets.BRANCHDEPLOY_PASSWORD }}
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"branchName": "${{ fromJson(steps.pr.outputs.response).head.ref }}", "gitRepository": "${{ fromJson(steps.pr.outputs.response).head.repo.clone_url }}", "deploymentName": "publisher-html", "dockerImageName": "${{ steps.push_images.outputs.imageNamePublisher }}"}'
          timeout: 600000
      - name: Update comment on success
        uses: peter-evans/create-or-update-comment@v4
        if: success()
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ steps.init_comment.outputs.comment-id }}
          body: "Successfully deployed here: ${{ fromJson(steps.triggerbranch_publisher.outputs.response).url }}"
      - name: Update comment on error
        uses: peter-evans/create-or-update-comment@v4
        if: (!success())
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ steps.init_comment.outputs.comment-id }}
          body: "Sorry, something went wrong :("