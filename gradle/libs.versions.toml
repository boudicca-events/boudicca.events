[versions]
kotlin = "2.2.0"
detekt = "1.23.8"
jackson = "2.19.2"
jackson-databind-nullable = "0.2.6"
jakarta-annotation = "3.0.0"
javax-jaxrs = "2.1.1"
findbugs = "3.0.2"
spring-openapi-starter = "2.8.5"
spring = "6.4.5"
spring-boot = "3.5.4"
swagger-core-version = "2.2.20"
org-springframework-boot-gradle-plugin = "3.4.3"
org-openapi-generator-gradle-plugin = "7.2.0"
junit-jupiter = "5.12.1"
assertk = "0.28.1"
mockk = "1.14.5"
spring-mockk = "4.0.2"
biweekly = "0.6.8"
jsoup = "1.19.1"
rometools = "2.1.0"
klaxon = "5.6"
logback = "1.5.18"
slf4j = "2.0.17"
handlebars = "4.4.0"
microsoft-playwright = "1.52.0"
axe-core-playwright = "4.10.1"
kotlin-logging = "7.0.5"
otel = "1.52.0"
otel-instrumentation = "2.18.1-alpha"

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring" }
spring-openapi-starter = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-openapi-starter" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }

findbugs = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }

jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-databind-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "jackson-databind-nullable" }

jakarta-annotation = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }
javax-jaxrs = { module = "javax.ws.rs:javax.ws.rs-api", version.ref = "javax-jaxrs" }

swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger-core-version" }

io-swagger-core-v3-swagger-gradle-plugin = { module = "io.swagger.core.v3.swagger-gradle-plugin:io.swagger.core.v3.swagger-gradle-plugin.gradle.plugin", version.ref = "swagger-core-version" }
org-jetbrains-kotlin-jvm-gradle-plugin = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
org-jetbrains-kotlin-plugin-spring-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.spring:org.jetbrains.kotlin.plugin.spring.gradle.plugin", version.ref = "kotlin" }
io-gitlab-arturbosch-detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
org-springframework-boot-gradle-plugin = { module = "org.springframework.boot:org.springframework.boot.gradle.plugin", version.ref = "org-springframework-boot-gradle-plugin" }
org-openapi-generator-gradle-plugin = { module = "org.openapi.generator:org.openapi.generator.gradle.plugin", version.ref = "org-openapi-generator-gradle-plugin" }

junit-jupiter-bom = { module = "org.junit:junit-bom", version.ref = "junit-jupiter" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
spring-mockk = { module = "com.ninja-squad:springmockk", version.ref = "spring-mockk" }

biweekly = { module = "net.sf.biweekly:biweekly", version.ref = "biweekly" }

jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
rometools = { module = "com.rometools:rome", version.ref = "rometools" }
klaxon = { module = "com.beust:klaxon", version.ref = "klaxon" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

handlebars = { module = "com.github.jknack:handlebars", version.ref = "handlebars" }
handlebars-springmvc = { module = "com.github.jknack:handlebars-springmvc", version.ref = "handlebars" }
microsoft-playwright = { module = "com.microsoft.playwright:playwright", version.ref = "microsoft-playwright" }
axe-core-playwright = { module = "com.deque.html.axe-core:playwright", version.ref = "axe-core-playwright" }

json = { module = "org.json:json", version = "20250517" }

google-api-client = { module = "com.google.api-client:google-api-client", version = "2.8.0" }
google-auth-library-oauth2-http = { module = "com.google.auth:google-auth-library-oauth2-http", version = "1.37.1" }
google-api-services-sheets = { module = "com.google.apis:google-api-services-sheets", version = "v4-rev20250616-2.0.0" }

kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }

micrometer-core = { module = "io.micrometer:micrometer-core", version = "1.14.4" }
micrometer-otel-bridge = { module = "io.micrometer:micrometer-tracing-bridge-otel", version = "1.5.2" }
otel-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "otel" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "otel" }
otel-exporter = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "otel" }
otel-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version = "1.32.0" }
otel-java-httpclient = { module = "io.opentelemetry.instrumentation:opentelemetry-java-http-client", version.ref = "otel-instrumentation" }
otel-micrometer = { module = "io.opentelemetry.instrumentation:opentelemetry-micrometer-1.5", version.ref = "otel-instrumentation" }
otel-logback = { module = "io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0", version.ref = "otel-instrumentation" }

[plugins]
jmh = { id = "me.champeau.jmh", version = "0.7.3" }

[bundles]

#following bundles are applied by the plugins with the same name
openapi-generate-spec = ["swagger-annotations", "javax-jaxrs"]
#TODO test if those dependencies are really necessary
openapi-generate-client = ["findbugs", "jackson-core", "jackson-annotations", "jackson-databind", "jackson-databind-jsr310", "jackson-databind-nullable", "jakarta-annotation"]

#all third-party plugins applied by our boudicca-* plugins
boudicca-plugins = ["org-jetbrains-kotlin-jvm-gradle-plugin", "org-jetbrains-kotlin-plugin-spring-gradle-plugin", "io-gitlab-arturbosch-detekt-gradle-plugin", "org-springframework-boot-gradle-plugin", "org-openapi-generator-gradle-plugin", "io-swagger-core-v3-swagger-gradle-plugin"]
